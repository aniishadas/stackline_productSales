{"ast":null,"code":"var _jsxFileName = \"/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/lineChart.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Line, XAxis, YAxis, Legend } from 'recharts';\n// @ts-ignore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductChart = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useSelector(state => state.data);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedData = data.sales.reduce((acc, sale) => {\n    const month = new Date(sale.weekEnding).toLocaleString('default', {\n      month: 'long'\n    });\n    if (!acc[month]) {\n      acc[month] = {\n        retailSales: 0,\n        wholesaleSales: 0\n      };\n    }\n    acc[month].retailSales += sale.retailSales;\n    acc[month].wholesaleSales += sale.wholesaleSales;\n    return acc;\n  }, {});\n  const chartData = Object.entries(groupedData).map(([month, sales]) => ({\n    month,\n    retailSales: sales.retailSales,\n    wholesaleSales: sales.wholesaleSales\n  })).sort((a, b) => {\n    const monthsOrder = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return monthsOrder.indexOf(a.month) - monthsOrder.indexOf(b.month);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartInnerDiv\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1200,\n      height: 500,\n      data: chartData,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        domain: [0, 'dataMax + 100'],\n        axisLine: false,\n        tick: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"retailSales\",\n        stroke: \"#63b4f8\",\n        strokeWidth: 3,\n        dot: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"wholesaleSales\",\n        stroke: \"#a5afc5\",\n        strokeWidth: 3,\n        dot: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n_s(ProductChart, \"EzcYAEf3B9rj55JUtG3bKNG2sSU=\", false, function () {\n  return [useSelector];\n});\n_c = ProductChart;\nexport default ProductChart;\nvar _c;\n$RefreshReg$(_c, \"ProductChart\");","map":{"version":3,"names":["React","useSelector","LineChart","Line","XAxis","YAxis","Legend","jsxDEV","_jsxDEV","ProductChart","_s","data","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedData","sales","reduce","acc","sale","month","Date","weekEnding","toLocaleString","retailSales","wholesaleSales","chartData","Object","entries","map","sort","a","b","monthsOrder","indexOf","className","width","height","dataKey","domain","axisLine","tick","type","stroke","strokeWidth","dot","_c","$RefreshReg$"],"sources":["/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/lineChart.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../reduxStore/store';\nimport { LineChart, Line, XAxis, YAxis, Legend } from 'recharts';\n// @ts-ignore\nimport { ScaleUtils } from 'recharts/lib/utils/ScaleUtils';\n\ninterface GroupedData {\n  [key: string]: {\n    retailSales: number;\n    wholesaleSales: number;\n  };\n}\n\n\nconst ProductChart: React.FC = () => {\n  const { data, error } = useSelector((state: RootState) => state.data);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  const groupedData = data.sales.reduce<GroupedData>((acc, sale) => {\n    const month = new Date(sale.weekEnding).toLocaleString('default', { month: 'long' });\n    if (!acc[month]) {\n      acc[month] = {\n        retailSales: 0,\n        wholesaleSales: 0,\n      };\n    }\n    acc[month].retailSales += sale.retailSales;\n    acc[month].wholesaleSales += sale.wholesaleSales;\n    return acc;\n  }, {});\n\n  const chartData = Object.entries(groupedData).map(([month, sales]) => ({\n    month,\n    retailSales: sales.retailSales,\n    wholesaleSales: sales.wholesaleSales,\n  })).sort((a, b) => {\n    const monthsOrder = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return monthsOrder.indexOf(a.month) - monthsOrder.indexOf(b.month);\n  });\n\n  return (\n      <div className=\"chartInnerDiv\">\n      <LineChart width={1200} height={500} data={chartData}>\n        <XAxis dataKey=\"month\"/>\n        <YAxis domain={[0, 'dataMax + 100']} axisLine={false} tick={false}/>\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"retailSales\" stroke=\"#63b4f8\" strokeWidth={3} dot={false}/>\n        <Line type=\"monotone\" dataKey=\"wholesaleSales\" stroke=\"#a5afc5\" strokeWidth={3} dot={false}/>\n      </LineChart>\n    </div>\n    \n  );\n};\n\nexport default ProductChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}