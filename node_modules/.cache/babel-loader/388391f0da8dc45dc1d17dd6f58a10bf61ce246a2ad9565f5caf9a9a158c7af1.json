{"ast":null,"code":"var _jsxFileName = \"/Users/anishadas/Documents/VSCode/stackline_demo/stackline_project/src/components/lineChart.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst LineChart = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useSelector(state => state.data);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = {\n    labels: data.sales.map(sale => new Date(sale.weekEnding).toLocaleString('default', {\n      month: 'long'\n    })),\n    datasets: [{\n      label: 'Retail Sales',\n      data: data.sales.map(sale => sale.retailSales),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }, {\n      label: 'Wholesale Sales',\n      data: data.sales.map(sale => sale.wholesaleSales),\n      fill: false,\n      borderColor: 'rgb(255, 99, 132)',\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'month'\n        },\n        display: false\n      },\n      y: {\n        type: 'linear',\n        ticks: {\n          callback: value => `$${value.toLocaleString()}`\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartInnerDiv\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"EzcYAEf3B9rj55JUtG3bKNG2sSU=\", false, function () {\n  return [useSelector];\n});\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useSelector","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","LineChart","_s","data","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","sales","map","sale","Date","weekEnding","toLocaleString","month","datasets","label","retailSales","fill","borderColor","tension","wholesaleSales","chartOptions","scales","x","type","time","unit","display","y","ticks","callback","value","plugins","legend","position","className","options","_c","$RefreshReg$"],"sources":["/Users/anishadas/Documents/VSCode/stackline_demo/stackline_project/src/components/lineChart.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../reduxStore/store';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale, CartesianLinearScaleOptions } from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst LineChart: React.FC = () => {\n  const { data, error } = useSelector((state: RootState) => state.data);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  const chartData = {\n    labels: data.sales.map((sale) => new Date(sale.weekEnding).toLocaleString('default', { month: 'long' })),\n    datasets: [\n      {\n        label: 'Retail Sales',\n        data: data.sales.map((sale) => sale.retailSales),\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n      },\n      {\n        label: 'Wholesale Sales',\n        data: data.sales.map((sale) => sale.wholesaleSales),\n        fill: false,\n        borderColor: 'rgb(255, 99, 132)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    scales: {\n      x: {\n        type: 'time' as const,\n        time: {\n          unit: 'month' as const,\n        },\n        display: false,\n      },\n      y: {\n        type: 'linear' as const,\n        ticks: {\n          callback: (value: number) => `$${value.toLocaleString()}`,\n        } as CartesianLinearScaleOptions['ticks'],\n      },\n    },\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n    },\n  };\n\n  return (\n    <div className='chartInnerDiv'>\n      <Line data={chartData} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default LineChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}