{"ast":null,"code":"var _jsxFileName = \"/Users/anishadas/Documents/VSCode/stackline_demo/stackline_project/src/components/lineChart.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useSelector(state => state.data);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedData = data.sales.reduce((acc, product) => {\n    product.forEach(sale => {\n      const date = new Date(sale.weekEnding);\n      const monthYear = `${date.toLocaleString('default', {\n        month: 'short'\n      })} ${date.getFullYear()}`;\n      if (!acc[monthYear]) {\n        acc[monthYear] = {\n          retailSales: 0,\n          wholesaleSales: 0,\n          count: 0\n        };\n      }\n      acc[monthYear].retailSales += sale.retailSales;\n      acc[monthYear].wholesaleSales += sale.wholesaleSales;\n      acc[monthYear].count += 1;\n    });\n    return acc;\n  }, {});\n  const chartData = {\n    labels: Object.keys(groupedData),\n    datasets: [{\n      label: 'Retail Sales',\n      data: Object.values(groupedData).map(item => item.retailSales / item.count),\n      fill: false,\n      backgroundColor: 'rgb(75, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.2)'\n    }, {\n      label: 'Wholesale Sales',\n      data: Object.values(groupedData).map(item => item.wholesaleSales / item.count),\n      fill: false,\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgba(255, 99, 132, 0.2)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartInnerDiv\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"EzcYAEf3B9rj55JUtG3bKNG2sSU=\", false, function () {\n  return [useSelector];\n});\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useSelector","Line","jsxDEV","_jsxDEV","LineChart","_s","data","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedData","sales","reduce","acc","product","forEach","sale","date","Date","weekEnding","monthYear","toLocaleString","month","getFullYear","retailSales","wholesaleSales","count","chartData","labels","Object","keys","datasets","label","values","map","item","fill","backgroundColor","borderColor","className","_c","$RefreshReg$"],"sources":["/Users/anishadas/Documents/VSCode/stackline_demo/stackline_project/src/components/lineChart.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../reduxStore/store';\nimport { Line } from 'react-chartjs-2';\n\nconst LineChart: React.FC = () => {\n  const { data, error } = useSelector((state: RootState) => state.data);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  const groupedData = data.sales.reduce((acc, product) => {\n    product.forEach(sale => {\n      const date = new Date(sale.weekEnding);\n      const monthYear = `${date.toLocaleString('default', { month: 'short' })} ${date.getFullYear()}`;\n      if (!acc[monthYear]) {\n        acc[monthYear] = {\n          retailSales: 0,\n          wholesaleSales: 0,\n          count: 0,\n        };\n      }\n      acc[monthYear].retailSales += sale.retailSales;\n      acc[monthYear].wholesaleSales += sale.wholesaleSales;\n      acc[monthYear].count += 1;\n    });\n    return acc;\n }, {});\n\n const chartData = {\n  labels: Object.keys(groupedData),\n  datasets: [\n    {\n      label: 'Retail Sales',\n      data: Object.values(groupedData).map(item => item.retailSales / item.count),\n      fill: false,\n      backgroundColor: 'rgb(75, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.2)',\n    },\n    {\n      label: 'Wholesale Sales',\n      data: Object.values(groupedData).map(item => item.wholesaleSales / item.count),\n      fill: false,\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgba(255, 99, 132, 0.2)',\n    },\n  ],\n};\n\n  return (\n    <div className='chartInnerDiv'>\n      <Line data={chartData} />\n    </div>\n  );\n};\n\nexport default LineChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}