{"ast":null,"code":"var _jsxFileName = \"/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/lineChart.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Line, XAxis, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductChart = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useSelector(state => state.data);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartInnerDiv\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: \"100%\",\n      data: data.sales,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"weekEnding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"retailSales\",\n        stroke: \"#40a8ef\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"wholesaleSales\",\n        stroke: \"#3c4858\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(ProductChart, \"EzcYAEf3B9rj55JUtG3bKNG2sSU=\", false, function () {\n  return [useSelector];\n});\n_c = ProductChart;\nexport default ProductChart;\nvar _c;\n$RefreshReg$(_c, \"ProductChart\");","map":{"version":3,"names":["React","useSelector","LineChart","Line","XAxis","Legend","jsxDEV","_jsxDEV","ProductChart","_s","data","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","sales","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/lineChart.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../reduxStore/store';\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n\ninterface GroupedData {\n  [key: string]: {\n    retailSales: number;\n    wholesaleSales: number;\n    count: number;\n  };\n}\n\nconst ProductChart: React.FC = () => {\n  const { data, error } = useSelector((state: RootState) => state.data);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  return (\n      <div className=\"chartInnerDiv\">\n      <LineChart width='100%' data={data.sales}>\n        <XAxis dataKey=\"weekEnding\" />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"retailSales\" stroke=\"#40a8ef\" />\n        <Line type=\"monotone\" dataKey=\"wholesaleSales\" stroke=\"#3c4858\" />\n      </LineChart>\n    </div>\n    \n  );\n};\n\nexport default ProductChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAGzC,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAiCC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWzF,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGV,WAAW,CAAEW,KAAgB,IAAKA,KAAK,CAACF,IAAI,CAAC;EAErE,IAAIC,KAAK,EAAE;IACT,oBAAOJ,OAAA;MAAAM,QAAA,GAAK,SAAO,EAACF,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,IAAI,CAACP,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAM,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,oBACIV,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAL,QAAA,eAC9BN,OAAA,CAACL,SAAS;MAACiB,KAAK,EAAC,MAAM;MAACT,IAAI,EAAEA,IAAI,CAACU,KAAM;MAAAP,QAAA,gBACvCN,OAAA,CAACH,KAAK;QAACiB,OAAO,EAAC;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9BV,OAAA,CAACF,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVV,OAAA,CAACJ,IAAI;QAACmB,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,aAAa;QAACE,MAAM,EAAC;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DV,OAAA,CAACJ,IAAI;QAACmB,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,gBAAgB;QAACE,MAAM,EAAC;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAGV,CAAC;AAACR,EAAA,CAtBID,YAAsB;EAAA,QACFP,WAAW;AAAA;AAAAuB,EAAA,GAD/BhB,YAAsB;AAwB5B,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}