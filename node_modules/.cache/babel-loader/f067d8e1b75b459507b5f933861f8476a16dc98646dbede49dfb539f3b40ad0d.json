{"ast":null,"code":"var _jsxFileName = \"/Users/anishadas/Documents/VSCode/stackline_demo/stackline_project/src/components/productTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setData } from '../reduxStore/slice'; // Assuming you have an action creator 'setData' in your Redux slice\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductTable = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useSelector(state => state.data);\n  const [sortColumn, setSortColumn] = useState('');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const dispatch = useDispatch();\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const year = date.getFullYear().toString().slice(-2);\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${month}-${day}-${year}`;\n  };\n  const formatCurrency = currency => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(currency);\n  };\n  const sortData = column => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n    const sortedData = [...data.sales].sort((a, b) => {\n      if (column === 'weekEnding') {\n        return sortDirection === 'asc' ? new Date(a[column]).getTime() - new Date(b[column]).getTime() : new Date(b[column]).getTime() - new Date(a[column]).getTime();\n      } else {\n        return sortDirection === 'asc' ? a[column] - b[column] : b[column] - a[column];\n      }\n    });\n\n    // Update the Redux state with the sorted data\n    dispatch(setData({\n      ...data,\n      sales: sortedData\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductTable, \"MufXHlC+i/A+Zo8EQsMqMGAOwo8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ProductTable;\nexport default ProductTable;\nvar _c;\n$RefreshReg$(_c, \"ProductTable\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","setData","jsxDEV","_jsxDEV","ProductTable","_s","data","error","state","sortColumn","setSortColumn","sortDirection","setSortDirection","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","date","Date","year","getFullYear","toString","slice","month","getMonth","padStart","day","getDate","formatCurrency","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","sortData","column","sortedData","sales","sort","a","b","getTime","_c","$RefreshReg$"],"sources":["/Users/anishadas/Documents/VSCode/stackline_demo/stackline_project/src/components/productTable.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../reduxStore/store';\nimport { setData } from '../reduxStore/slice'; // Assuming you have an action creator 'setData' in your Redux slice\n\nconst ProductTable: React.FC = () => {\n  const { data, error } = useSelector((state: RootState) => state.data);\n  const [sortColumn, setSortColumn] = useState<keyof ProductData['sales'][0] | ''>('');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const dispatch = useDispatch();\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear().toString().slice(-2);\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${month}-${day}-${year}`;\n  };\n\n  const formatCurrency = (currency: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(currency);\n  };\n\n  const sortData = (column: keyof ProductData['sales'][0]) => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n\n    const sortedData = [...data.sales].sort((a, b) => {\n      if (column === 'weekEnding') {\n        return sortDirection === 'asc'\n          ? new Date(a[column]).getTime() - new Date(b[column]).getTime()\n          : new Date(b[column]).getTime() - new Date(a[column]).getTime();\n      } else {\n        return sortDirection === 'asc'\n          ? (a[column] as number) - (b[column] as number)\n          : (b[column] as number) - (a[column] as number);\n      }\n    });\n\n    // Update the Redux state with the sorted data\n    dispatch(setData({ ...data, sales: sortedData }));\n  };\n\n  return (\n    <table>\n      {/* ... (rest of the code remains the same) */}\n    </table>\n  );\n};\n\nexport default ProductTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}