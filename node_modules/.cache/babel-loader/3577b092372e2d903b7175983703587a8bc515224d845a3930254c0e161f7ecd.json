{"ast":null,"code":"var _jsxFileName = \"/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/productTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductTable = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useSelector(state => state.data);\n  const [sortColumn, setSortColumn] = useState('weekEnding');\n  const [sortDirection, setSortDirection] = useState('ascending');\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const year = date.getFullYear().toString().slice(-2);\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${month}-${day}-${year}`;\n  };\n  const formatCurrency = currency => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(currency);\n  };\n  const sortData = column => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'ascending' ? 'descending' : 'ascending');\n    } else {\n      setSortColumn(column);\n      setSortDirection('ascending');\n    }\n  };\n  const sortedData = [...data.sales].sort((a, b) => {\n    if (sortColumn === 'weekEnding') {\n      return sortDirection === 'ascending' ? new Date(a[sortColumn]).getTime() - new Date(b[sortColumn]).getTime() : new Date(b[sortColumn]).getTime() - new Date(a[sortColumn]).getTime();\n    } else {\n      return sortDirection === 'ascending' ? a[sortColumn] - b[sortColumn] : b[sortColumn] - a[sortColumn];\n    }\n  });\n  const renderSortIcon = column => {\n    if (sortColumn === column) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setSortDirection(sortDirection === 'ascending' ? 'descending' : 'ascending'),\n        children: sortDirection === 'ascending' ? '↓' : '↑'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2195\\uFE0E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this); // Render a circle for unsorted columns\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData('weekEnding'),\n          children: [\"WEEK ENDING\", renderSortIcon('weekEnding')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData('retailSales'),\n          children: [\"RETAIL SALES\", renderSortIcon('retailSales')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData('wholesaleSales'),\n          children: [\"WHOLESALE SALES\", renderSortIcon('wholesaleSales')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData('unitsSold'),\n          children: [\"UNITS SOLD\", renderSortIcon('unitsSold')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sortData('retailerMargin'),\n          children: [\"RETAILER MARGIN\", renderSortIcon('retailerMargin')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: sortedData.map((sale, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatDate(sale.weekEnding)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatCurrency(sale.retailSales)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatCurrency(sale.wholesaleSales)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: sale.unitsSold\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatCurrency(sale.retailerMargin)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductTable, \"FU8GmHlHSfw37uePkbTDNX26NM0=\", false, function () {\n  return [useSelector];\n});\n_c = ProductTable;\nexport default ProductTable;\nvar _c;\n$RefreshReg$(_c, \"ProductTable\");","map":{"version":3,"names":["React","useState","useSelector","jsxDEV","_jsxDEV","ProductTable","_s","data","error","state","sortColumn","setSortColumn","sortDirection","setSortDirection","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","date","Date","year","getFullYear","toString","slice","month","getMonth","padStart","day","getDate","formatCurrency","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","sortData","column","sortedData","sales","sort","a","b","getTime","renderSortIcon","onClick","map","sale","index","weekEnding","retailSales","wholesaleSales","unitsSold","retailerMargin","_c","$RefreshReg$"],"sources":["/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/productTable.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../reduxStore/store';\nimport { SaleData } from '../dataType/data';\n\nconst ProductTable: React.FC = () => {\n  const { data, error } = useSelector((state: RootState) => state.data);\n  const [sortColumn, setSortColumn] = useState<keyof SaleData>('weekEnding');\n  const [sortDirection, setSortDirection] = useState<'ascending' | 'descending'>('ascending');\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear().toString().slice(-2); \n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); \n    const day = date.getDate().toString().padStart(2, '0');\n    return `${month}-${day}-${year}`; \n  };\n\n  const formatCurrency = (currency: number) => {\n    return new Intl.NumberFormat('en-US', { \n        style: 'currency', \n        currency: 'USD', \n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0 }).format(currency);\n  };\n\n  const sortData = (column: keyof SaleData) => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'ascending' ? 'descending' : 'ascending');\n    } else {\n      setSortColumn(column);\n      setSortDirection('ascending');\n    }\n  };\n\n  const sortedData = [...data.sales].sort((a, b) => {\n    if (sortColumn === 'weekEnding') {\n      return sortDirection === 'ascending'\n        ? new Date(a[sortColumn]).getTime() - new Date(b[sortColumn]).getTime()\n        : new Date(b[sortColumn]).getTime() - new Date(a[sortColumn]).getTime();\n    } else {\n      return sortDirection === 'ascending'\n        ? a[sortColumn] - b[sortColumn]\n        : b[sortColumn] - a[sortColumn];\n    }\n  });\n\n  const renderSortIcon = (column: keyof SaleData) => {\n    if (sortColumn === column) {\n      return (\n        <span onClick={() => setSortDirection(sortDirection === 'ascending' ? 'descending' : 'ascending')}>\n          {sortDirection === 'ascending' ? '↓': '↑'}\n        </span>\n      );\n    } else {\n      return <span>↕︎</span>; // Render a circle for unsorted columns\n    }\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n        <th onClick={() => sortData('weekEnding')}>\n            WEEK ENDING \n             {renderSortIcon('weekEnding')}\n          </th>\n          <th onClick={() => sortData('retailSales')}>\n            RETAIL SALES \n            {renderSortIcon('retailSales')}\n          </th>\n          <th onClick={() => sortData('wholesaleSales')}>\n            WHOLESALE SALES \n            {renderSortIcon('wholesaleSales')}\n          </th>\n          <th onClick={() => sortData('unitsSold')}>\n            UNITS SOLD \n            {renderSortIcon('unitsSold')}\n          </th>\n          <th onClick={() => sortData('retailerMargin')}>\n            RETAILER MARGIN \n            {renderSortIcon('retailerMargin')}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedData.map((sale, index) => (\n          <tr key={index}>\n            <td>{formatDate(sale.weekEnding)}</td>\n            <td>{formatCurrency(sale.retailSales)}</td>\n            <td>{formatCurrency(sale.wholesaleSales)}</td>\n            <td>{sale.unitsSold}</td>\n            <td>{formatCurrency(sale.retailerMargin)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ProductTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}