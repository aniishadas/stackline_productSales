{"ast":null,"code":"var _jsxFileName = \"/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/lineChart.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Line, XAxis, Legend } from 'recharts';\n// @ts-ignore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatMonthYear = value => {\n  const date = new Date(value);\n  return `${date.toLocaleString('default', {\n    month: 'short'\n  })}`;\n};\nconst ProductChart = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useSelector(state => state.data);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartInnerDiv\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 900,\n      height: 400,\n      data: data.sales,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"weekEnding\",\n        tickFormatter: formatMonthYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"retailSales\",\n        stroke: \"#63b4f8\",\n        strokeWidth: 3,\n        dot: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"wholesaleSales\",\n        stroke: \"#a5afc5\",\n        strokeWidth: 3,\n        dot: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(ProductChart, \"EzcYAEf3B9rj55JUtG3bKNG2sSU=\", false, function () {\n  return [useSelector];\n});\n_c = ProductChart;\nexport default ProductChart;\nvar _c;\n$RefreshReg$(_c, \"ProductChart\");","map":{"version":3,"names":["React","useSelector","LineChart","Line","XAxis","Legend","jsxDEV","_jsxDEV","formatMonthYear","value","date","Date","toLocaleString","month","ProductChart","_s","data","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","sales","dataKey","tickFormatter","type","stroke","strokeWidth","dot","_c","$RefreshReg$"],"sources":["/Users/anishadas/Documents/VSCode/stackline_productSales/src/components/lineChart.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../reduxStore/store';\nimport { LineChart, Line, XAxis, Legend } from 'recharts';\n// @ts-ignore\nimport { ScaleUtils } from 'recharts/lib/utils/ScaleUtils';\n\n\nconst formatMonthYear = (value: string) => {\n  const date = new Date(value);\n  return `${date.toLocaleString('default', { month: 'short' })}`;\n};\n\nconst ProductChart: React.FC = () => {\n  const { data, error } = useSelector((state: RootState) => state.data);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  return (\n      <div className=\"chartInnerDiv\">\n      <LineChart width={900} height={400} data={data.sales}>\n        <XAxis dataKey=\"weekEnding\" tickFormatter={formatMonthYear}/>\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"retailSales\" stroke=\"#63b4f8\" strokeWidth={3} dot={false}/>\n        <Line type=\"monotone\" dataKey=\"wholesaleSales\" stroke=\"#a5afc5\" strokeWidth={3} dot={false}/>\n      </LineChart>\n    </div>\n    \n  );\n};\n\nexport default ProductChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,UAAU;AACzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,eAAe,GAAIC,KAAa,IAAK;EACzC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAC;EAC5B,OAAQ,GAAEC,IAAI,CAACE,cAAc,CAAC,SAAS,EAAE;IAAEC,KAAK,EAAE;EAAQ,CAAC,CAAE,EAAC;AAChE,CAAC;AAED,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGhB,WAAW,CAAEiB,KAAgB,IAAKA,KAAK,CAACF,IAAI,CAAC;EAErE,IAAIC,KAAK,EAAE;IACT,oBAAOV,OAAA;MAAAY,QAAA,GAAK,SAAO,EAACF,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,IAAI,CAACP,IAAI,EAAE;IACT,oBAAOT,OAAA;MAAAY,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAL,QAAA,eAC9BZ,OAAA,CAACL,SAAS;MAACuB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACV,IAAI,EAAEA,IAAI,CAACW,KAAM;MAAAR,QAAA,gBACnDZ,OAAA,CAACH,KAAK;QAACwB,OAAO,EAAC,YAAY;QAACC,aAAa,EAAErB;MAAgB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7DhB,OAAA,CAACF,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVhB,OAAA,CAACJ,IAAI;QAAC2B,IAAI,EAAC,UAAU;QAACF,OAAO,EAAC,aAAa;QAACG,MAAM,EAAC,SAAS;QAACC,WAAW,EAAE,CAAE;QAACC,GAAG,EAAE;MAAM;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1FhB,OAAA,CAACJ,IAAI;QAAC2B,IAAI,EAAC,UAAU;QAACF,OAAO,EAAC,gBAAgB;QAACG,MAAM,EAAC,SAAS;QAACC,WAAW,EAAE,CAAE;QAACC,GAAG,EAAE;MAAM;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAGV,CAAC;AAACR,EAAA,CAtBID,YAAsB;EAAA,QACFb,WAAW;AAAA;AAAAiC,EAAA,GAD/BpB,YAAsB;AAwB5B,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}